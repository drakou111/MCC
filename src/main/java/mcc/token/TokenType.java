package mcc.token;

public enum TokenType {

    GET_BUTTON_SELECT("\\bgetButtonSelect\\b"),
    GET_BUTTON_START("\\bgetButtonStart\\b"),
    GET_BUTTON_RIGHT("\\bgetButtonRight\\b"),
    GET_BUTTON_DOWN("\\bgetButtonDown\\b"),
    GET_BUTTON_LEFT("\\bgetButtonLeft\\b"),
    SHOW_UNSIGNED("\\bshowUnsigned\\b"),
    GET_BUTTON_UP("\\bgetButtonUp\\b"),
    CLEAR_SCREEN("\\bclearScreen\\b"),
    CLEAR_NUMBER("\\bclearNumber\\b"),
    WRITE_STRING("\\bwriteString\\b"),
    GET_BUTTON_A("\\bgetButtonA\\b"),
    GET_BUTTON_B("\\bgetButtonB\\b"),
    SHOW_SIGNED("\\bshowSigned\\b"),
    CLEAR_PIXEL("\\bclearPixel\\b"),
    PUSH_SCREEN("\\bpushScreen\\b"),
    CLEAR_CHARS("\\bclearChars\\b"),
    SHOW_NUMBER("\\bshowNumber\\b"),
    DRAW_PIXEL("\\bdrawPixel\\b"),
    WRITE_CHAR("\\bwriteChar\\b"),
    PUSH_CHARS("\\bpushChars\\b"),
    GET_PIXEL("\\bgetPixel\\b"),
    FUNCTION("\\bfunction\\b"),
    CONTINUE("\\bcontinue\\b"),
    DEFAULT("\\bdefault\\b"),
    RETURN("\\breturn\\b"),
    ELSEIF("\\belseif\\b"),
    SWITCH("\\bswitch\\b"),
    RANDOM("\\brandom\\b"),
    BREAK("\\bbreak\\b"),
    WHILE("\\bwhile\\b"),
    ELSE("\\belse\\b"),
    CASE("\\bcase\\b"),
    EXIT("\\bexit\\b"),
    FOR("\\bfor\\b"),
    LET("\\blet\\b"),
    LEFT_SHIFT_ASSIGN("<<="),
    RIGHT_SHIFT_ASSIGN(">>="),
    BITWISE_NAND_ASSIGN("!\\&="),
    BITWISE_NOR_ASSIGN("!\\|="),
    BITWISE_XNOR_ASSIGN("!\\^="),
    NAND("!\\&\\&"),
    NOR("!\\|\\|"),
    XNOR("!\\^\\^"),
    IF("\\bif\\b"),
    DO("\\bdo\\b"),
    INCREMENT("\\+\\+"),
    DECREMENT("--"),
    LEFT_SHIFT("<<"),
    RIGHT_SHIFT(">>"),
    PLUS_ASSIGN("\\+="),
    MINUS_ASSIGN("-="),
    BITWISE_AND_ASSIGN("\\&="),
    BITWISE_OR_ASSIGN("\\|="),
    BITWISE_XOR_ASSIGN("\\^="),
    MODULO_ASSIGN("%="),
    EQUAL("=="),
    NOT_EQUAL("!="),
    LESS_EQUAL("<="),
    GREATER_EQUAL(">="),
    OR("\\|\\|"),
    AND("\\&\\&"),
    XOR("\\^\\^"),
    BITWISE_NAND("!\\&"),
    BITWISE_NOR("!\\|"),
    BITWISE_XNOR("!\\^"),
    COMMENT("\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/"),
    NOT("!"),
    BITWISE_OR("\\|"),
    BITWISE_AND("\\&"),
    BITWISE_XOR("\\^"),
    BITWISE_NOT("\\~"),
    PLUS("\\+"),
    MODULO("%"),
    MINUS("-"),
    ASSIGN("="),
    LESS_THAN("<"),
    GREATER_THAN(">"),
    LEFT_PAREN("\\("),
    RIGHT_PAREN("\\)"),
    LEFT_BRACE("\\{"),
    RIGHT_BRACE("\\}"),
    SEMICOLON(";"),
    COLON(":"),
    COMMA(","),
    NUMBER("\\b\\d+\\b"),
    IDENTIFIER("[a-zA-Z0-9_]+"),
    STRING("\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\""),
    CHAR("'([^'\\\\]|\\\\.)'"),
    WHITESPACE("\\s+"),
    UNKNOWN(null),
    END_OF_FILE(null);

    private final String pattern;

    TokenType(String pattern) {
        this.pattern = pattern;
    }

    public String getPattern() {
        return pattern;
    }
}